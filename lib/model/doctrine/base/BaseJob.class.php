<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Job', 'doctrine');

/**
 * BaseJob
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idjob
 * @property integer $idcountry
 * @property integer $id_city
 * @property integer $iduser
 * @property integer $idsubjobcategory
 * @property string $jobname
 * @property string $descriptionjob
 * @property date $datedeadlinejob
 * @property User $User
 * @property Country $Country
 * @property City $City
 * @property Subjobcategory $Subjobcategory
 * 
 * @method integer        getIdjob()            Returns the current record's "idjob" value
 * @method integer        getIdcountry()        Returns the current record's "idcountry" value
 * @method integer        getIdCity()           Returns the current record's "id_city" value
 * @method integer        getIduser()           Returns the current record's "iduser" value
 * @method integer        getIdsubjobcategory() Returns the current record's "idsubjobcategory" value
 * @method string         getJobname()          Returns the current record's "jobname" value
 * @method string         getDescriptionjob()   Returns the current record's "descriptionjob" value
 * @method date           getDatedeadlinejob()  Returns the current record's "datedeadlinejob" value
 * @method User           getUser()             Returns the current record's "User" value
 * @method Country        getCountry()          Returns the current record's "Country" value
 * @method City           getCity()             Returns the current record's "City" value
 * @method Subjobcategory getSubjobcategory()   Returns the current record's "Subjobcategory" value
 * @method Job            setIdjob()            Sets the current record's "idjob" value
 * @method Job            setIdcountry()        Sets the current record's "idcountry" value
 * @method Job            setIdCity()           Sets the current record's "id_city" value
 * @method Job            setIduser()           Sets the current record's "iduser" value
 * @method Job            setIdsubjobcategory() Sets the current record's "idsubjobcategory" value
 * @method Job            setJobname()          Sets the current record's "jobname" value
 * @method Job            setDescriptionjob()   Sets the current record's "descriptionjob" value
 * @method Job            setDatedeadlinejob()  Sets the current record's "datedeadlinejob" value
 * @method Job            setUser()             Sets the current record's "User" value
 * @method Job            setCountry()          Sets the current record's "Country" value
 * @method Job            setCity()             Sets the current record's "City" value
 * @method Job            setSubjobcategory()   Sets the current record's "Subjobcategory" value
 * 
 * @package    ConsultingCoffee
 * @subpackage model
 * @author     OUTTRABADY Lucky
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJob extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('job');
        $this->hasColumn('idjob', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('idcountry', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_city', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('iduser', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('idsubjobcategory', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('jobname', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('descriptionjob', 'string', 4000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4000,
             ));
        $this->hasColumn('datedeadlinejob', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'iduser',
             'foreign' => 'iduser'));

        $this->hasOne('Country', array(
             'local' => 'idcountry',
             'foreign' => 'idcountry'));

        $this->hasOne('City', array(
             'local' => 'id_city',
             'foreign' => 'id_city'));

        $this->hasOne('Subjobcategory', array(
             'local' => 'idsubjobcategory',
             'foreign' => 'idsubjobcategory'));
    }
}