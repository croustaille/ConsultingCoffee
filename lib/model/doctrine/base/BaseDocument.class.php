<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Document', 'doctrine');

/**
 * BaseDocument
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $iddocument
 * @property integer $idideas
 * @property integer $id_confidentialitylevel
 * @property string $titredocument
 * @property string $descriptiondocument
 * @property string $chemindocument
 * @property Ideas $Ideas
 * @property Confidentialitylevel $Confidentialitylevel
 * @property Doctrine_Collection $Formatlistaccept
 * 
 * @method integer              getIddocument()              Returns the current record's "iddocument" value
 * @method integer              getIdideas()                 Returns the current record's "idideas" value
 * @method integer              getIdConfidentialitylevel()  Returns the current record's "id_confidentialitylevel" value
 * @method string               getTitredocument()           Returns the current record's "titredocument" value
 * @method string               getDescriptiondocument()     Returns the current record's "descriptiondocument" value
 * @method string               getChemindocument()          Returns the current record's "chemindocument" value
 * @method Ideas                getIdeas()                   Returns the current record's "Ideas" value
 * @method Confidentialitylevel getConfidentialitylevel()    Returns the current record's "Confidentialitylevel" value
 * @method Doctrine_Collection  getFormatlistaccept()        Returns the current record's "Formatlistaccept" collection
 * @method Document             setIddocument()              Sets the current record's "iddocument" value
 * @method Document             setIdideas()                 Sets the current record's "idideas" value
 * @method Document             setIdConfidentialitylevel()  Sets the current record's "id_confidentialitylevel" value
 * @method Document             setTitredocument()           Sets the current record's "titredocument" value
 * @method Document             setDescriptiondocument()     Sets the current record's "descriptiondocument" value
 * @method Document             setChemindocument()          Sets the current record's "chemindocument" value
 * @method Document             setIdeas()                   Sets the current record's "Ideas" value
 * @method Document             setConfidentialitylevel()    Sets the current record's "Confidentialitylevel" value
 * @method Document             setFormatlistaccept()        Sets the current record's "Formatlistaccept" collection
 * 
 * @package    ConsultingCoffee
 * @subpackage model
 * @author     OUTTRABADY Lucky
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDocument extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('document');
        $this->hasColumn('iddocument', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('idideas', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_confidentialitylevel', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('titredocument', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('descriptiondocument', 'string', 4000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4000,
             ));
        $this->hasColumn('chemindocument', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 300,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Ideas', array(
             'local' => 'idideas',
             'foreign' => 'idideas'));

        $this->hasOne('Confidentialitylevel', array(
             'local' => 'id_confidentialitylevel',
             'foreign' => 'id_confidentialitylevel'));

        $this->hasMany('Formatlistaccept', array(
             'local' => 'iddocument',
             'foreign' => 'iddocument'));
    }
}