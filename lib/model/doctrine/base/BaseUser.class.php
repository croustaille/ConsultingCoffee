<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('User', 'doctrine');

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $iduser
 * @property integer $idusertype
 * @property string $titreuser
 * @property string $nameuser
 * @property string $surnameuser
 * @property string $adressuser
 * @property string $countryuser
 * @property string $raisonsocialuser
 * @property string $phonenumberuser
 * @property string $mailuser
 * @property string $pwduser
 * @property integer $isactivateuser
 * @property date $lastconnexionuser
 * @property string $zipcodeuser
 * @property string $jobdescriptionuser
 * @property string $corporationsize
 * @property integer $isacceptemailnews
 * @property integer $apayersacotisationpourpublication
 * @property date $datevalidationpayement
 * @property date $datefinvalidation
 * @property integer $isconsultant
 * @property integer $isrecruteur
 * @property integer $issupplier
 * @property Usertype $Usertype
 * @property Doctrine_Collection $Avendu
 * @property Doctrine_Collection $Cv
 * @property Doctrine_Collection $Haveexpertisein
 * @property Doctrine_Collection $Ideas
 * @property Doctrine_Collection $Job
 * @property Doctrine_Collection $Workinsector
 * 
 * @method integer             getIduser()                            Returns the current record's "iduser" value
 * @method integer             getIdusertype()                        Returns the current record's "idusertype" value
 * @method string              getTitreuser()                         Returns the current record's "titreuser" value
 * @method string              getNameuser()                          Returns the current record's "nameuser" value
 * @method string              getSurnameuser()                       Returns the current record's "surnameuser" value
 * @method string              getAdressuser()                        Returns the current record's "adressuser" value
 * @method string              getCountryuser()                       Returns the current record's "countryuser" value
 * @method string              getRaisonsocialuser()                  Returns the current record's "raisonsocialuser" value
 * @method string              getPhonenumberuser()                   Returns the current record's "phonenumberuser" value
 * @method string              getMailuser()                          Returns the current record's "mailuser" value
 * @method string              getPwduser()                           Returns the current record's "pwduser" value
 * @method integer             getIsactivateuser()                    Returns the current record's "isactivateuser" value
 * @method date                getLastconnexionuser()                 Returns the current record's "lastconnexionuser" value
 * @method string              getZipcodeuser()                       Returns the current record's "zipcodeuser" value
 * @method string              getJobdescriptionuser()                Returns the current record's "jobdescriptionuser" value
 * @method string              getCorporationsize()                   Returns the current record's "corporationsize" value
 * @method integer             getIsacceptemailnews()                 Returns the current record's "isacceptemailnews" value
 * @method integer             getApayersacotisationpourpublication() Returns the current record's "apayersacotisationpourpublication" value
 * @method date                getDatevalidationpayement()            Returns the current record's "datevalidationpayement" value
 * @method date                getDatefinvalidation()                 Returns the current record's "datefinvalidation" value
 * @method integer             getIsconsultant()                      Returns the current record's "isconsultant" value
 * @method integer             getIsrecruteur()                       Returns the current record's "isrecruteur" value
 * @method integer             getIssupplier()                        Returns the current record's "issupplier" value
 * @method Usertype            getUsertype()                          Returns the current record's "Usertype" value
 * @method Doctrine_Collection getAvendu()                            Returns the current record's "Avendu" collection
 * @method Doctrine_Collection getCv()                                Returns the current record's "Cv" collection
 * @method Doctrine_Collection getHaveexpertisein()                   Returns the current record's "Haveexpertisein" collection
 * @method Doctrine_Collection getIdeas()                             Returns the current record's "Ideas" collection
 * @method Doctrine_Collection getJob()                               Returns the current record's "Job" collection
 * @method Doctrine_Collection getWorkinsector()                      Returns the current record's "Workinsector" collection
 * @method User                setIduser()                            Sets the current record's "iduser" value
 * @method User                setIdusertype()                        Sets the current record's "idusertype" value
 * @method User                setTitreuser()                         Sets the current record's "titreuser" value
 * @method User                setNameuser()                          Sets the current record's "nameuser" value
 * @method User                setSurnameuser()                       Sets the current record's "surnameuser" value
 * @method User                setAdressuser()                        Sets the current record's "adressuser" value
 * @method User                setCountryuser()                       Sets the current record's "countryuser" value
 * @method User                setRaisonsocialuser()                  Sets the current record's "raisonsocialuser" value
 * @method User                setPhonenumberuser()                   Sets the current record's "phonenumberuser" value
 * @method User                setMailuser()                          Sets the current record's "mailuser" value
 * @method User                setPwduser()                           Sets the current record's "pwduser" value
 * @method User                setIsactivateuser()                    Sets the current record's "isactivateuser" value
 * @method User                setLastconnexionuser()                 Sets the current record's "lastconnexionuser" value
 * @method User                setZipcodeuser()                       Sets the current record's "zipcodeuser" value
 * @method User                setJobdescriptionuser()                Sets the current record's "jobdescriptionuser" value
 * @method User                setCorporationsize()                   Sets the current record's "corporationsize" value
 * @method User                setIsacceptemailnews()                 Sets the current record's "isacceptemailnews" value
 * @method User                setApayersacotisationpourpublication() Sets the current record's "apayersacotisationpourpublication" value
 * @method User                setDatevalidationpayement()            Sets the current record's "datevalidationpayement" value
 * @method User                setDatefinvalidation()                 Sets the current record's "datefinvalidation" value
 * @method User                setIsconsultant()                      Sets the current record's "isconsultant" value
 * @method User                setIsrecruteur()                       Sets the current record's "isrecruteur" value
 * @method User                setIssupplier()                        Sets the current record's "issupplier" value
 * @method User                setUsertype()                          Sets the current record's "Usertype" value
 * @method User                setAvendu()                            Sets the current record's "Avendu" collection
 * @method User                setCv()                                Sets the current record's "Cv" collection
 * @method User                setHaveexpertisein()                   Sets the current record's "Haveexpertisein" collection
 * @method User                setIdeas()                             Sets the current record's "Ideas" collection
 * @method User                setJob()                               Sets the current record's "Job" collection
 * @method User                setWorkinsector()                      Sets the current record's "Workinsector" collection
 * 
 * @package    ConsultingCoffee
 * @subpackage model
 * @author     OUTTRABADY Lucky
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('iduser', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('idusertype', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('titreuser', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('nameuser', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('surnameuser', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('adressuser', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('countryuser', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('raisonsocialuser', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('phonenumberuser', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('mailuser', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('pwduser', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('isactivateuser', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('lastconnexionuser', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('zipcodeuser', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('jobdescriptionuser', 'string', 3000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 3000,
             ));
        $this->hasColumn('corporationsize', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('isacceptemailnews', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('apayersacotisationpourpublication', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('datevalidationpayement', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('datefinvalidation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('isconsultant', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('isrecruteur', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('issupplier', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usertype', array(
             'local' => 'idusertype',
             'foreign' => 'idusertype'));

        $this->hasMany('Avendu', array(
             'local' => 'iduser',
             'foreign' => 'iduser'));

        $this->hasMany('Cv', array(
             'local' => 'iduser',
             'foreign' => 'iduser'));

        $this->hasMany('Haveexpertisein', array(
             'local' => 'iduser',
             'foreign' => 'iduser'));

        $this->hasMany('Ideas', array(
             'local' => 'iduser',
             'foreign' => 'iduser'));

        $this->hasMany('Job', array(
             'local' => 'iduser',
             'foreign' => 'iduser'));

        $this->hasMany('Workinsector', array(
             'local' => 'iduser',
             'foreign' => 'iduser'));
    }
}