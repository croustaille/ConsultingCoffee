<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Haveexpertisein', 'doctrine');

/**
 * BaseHaveexpertisein
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idexpertise
 * @property integer $iduser
 * @property User $User
 * @property Expertise $Expertise
 * 
 * @method integer         getIdexpertise() Returns the current record's "idexpertise" value
 * @method integer         getIduser()      Returns the current record's "iduser" value
 * @method User            getUser()        Returns the current record's "User" value
 * @method Expertise       getExpertise()   Returns the current record's "Expertise" value
 * @method Haveexpertisein setIdexpertise() Sets the current record's "idexpertise" value
 * @method Haveexpertisein setIduser()      Sets the current record's "iduser" value
 * @method Haveexpertisein setUser()        Sets the current record's "User" value
 * @method Haveexpertisein setExpertise()   Sets the current record's "Expertise" value
 * 
 * @package    ConsultingCoffee
 * @subpackage model
 * @author     OUTTRABADY Lucky
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHaveexpertisein extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('haveexpertisein');
        $this->hasColumn('idexpertise', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('iduser', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'iduser',
             'foreign' => 'iduser'));

        $this->hasOne('Expertise', array(
             'local' => 'idexpertise',
             'foreign' => 'idexpertise'));
    }
}