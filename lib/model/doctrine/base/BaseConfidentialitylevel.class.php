<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Confidentialitylevel', 'doctrine');

/**
 * BaseConfidentialitylevel
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_confidentialitylevel
 * @property string $nameconfidentialitylevel
 * @property Doctrine_Collection $Document
 * 
 * @method integer              getIdConfidentialitylevel()   Returns the current record's "id_confidentialitylevel" value
 * @method string               getNameconfidentialitylevel() Returns the current record's "nameconfidentialitylevel" value
 * @method Doctrine_Collection  getDocument()                 Returns the current record's "Document" collection
 * @method Confidentialitylevel setIdConfidentialitylevel()   Sets the current record's "id_confidentialitylevel" value
 * @method Confidentialitylevel setNameconfidentialitylevel() Sets the current record's "nameconfidentialitylevel" value
 * @method Confidentialitylevel setDocument()                 Sets the current record's "Document" collection
 * 
 * @package    ConsultingCoffee
 * @subpackage model
 * @author     OUTTRABADY Lucky
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConfidentialitylevel extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('confidentialitylevel');
        $this->hasColumn('id_confidentialitylevel', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nameconfidentialitylevel', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Document', array(
             'local' => 'id_confidentialitylevel',
             'foreign' => 'id_confidentialitylevel'));
    }
}